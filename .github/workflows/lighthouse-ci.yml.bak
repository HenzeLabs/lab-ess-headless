name: Lighthouse CI Performance Audit

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build production bundle
        run: npm run build
        env:
          NODE_ENV: production
          SHOPIFY_STORE_DOMAIN: ${{ secrets.SHOPIFY_STORE_DOMAIN }}
          SHOPIFY_STOREFRONT_ACCESS_TOKEN: ${{ secrets.SHOPIFY_STOREFRONT_ACCESS_TOKEN }}
          NEXT_PUBLIC_SHOPIFY_STORE_DOMAIN: ${{ secrets.NEXT_PUBLIC_SHOPIFY_STORE_DOMAIN }}

      - name: Start production server
        run: npm run start &
        env:
          NODE_ENV: production
          PORT: 3000

      - name: Wait for server to be ready
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:3000; do sleep 2; done'

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.13.x

      - name: Run Lighthouse CI
        run: lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Upload Lighthouse results as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-results-${{ github.sha }}
          path: |
            .lighthouseci/
            lighthouse-*.report.html
          retention-days: 30

      - name: Save baseline (main branch only)
        if: github.ref == 'refs/heads/main'
        run: |
          mkdir -p lighthouse-baselines
          if [ -f .lighthouseci/manifest.json ]; then
            cp .lighthouseci/manifest.json lighthouse-baselines/baseline-$(date +%Y%m%d-%H%M%S).json
            echo "Baseline saved for commit ${{ github.sha }}"
          fi

      - name: Upload baseline artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-baseline-${{ github.sha }}
          path: lighthouse-baselines/
          retention-days: 90

      - name: Compare with previous baseline
        if: github.event_name == 'pull_request'
        continue-on-error: true
        run: |
          echo "Comparing Lighthouse scores with main branch baseline..."
          # Download previous baseline from main branch
          # This requires LHCI server or artifact comparison setup

      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            const fs = require('fs');
            const manifestPath = '.lighthouseci/manifest.json';

            if (!fs.existsSync(manifestPath)) {
              console.log('No manifest found, skipping PR comment');
              return;
            }

            const manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));

            let summary = '## üî¶ Lighthouse CI Results\n\n';

            manifest.forEach(result => {
              const url = result.url.replace('http://localhost:3000', '');
              const scores = result.summary;

              const perfScore = Math.round(scores.performance * 100);
              const a11yScore = Math.round(scores.accessibility * 100);
              const bpScore = Math.round(scores['best-practices'] * 100);
              const seoScore = Math.round(scores.seo * 100);
              const pwaScore = Math.round(scores.pwa * 100);

              const perfIcon = perfScore >= 90 ? '‚úÖ' : perfScore >= 50 ? '‚ö†Ô∏è' : '‚ùå';
              const a11yIcon = a11yScore >= 95 ? '‚úÖ' : a11yScore >= 50 ? '‚ö†Ô∏è' : '‚ùå';
              const bpIcon = bpScore >= 95 ? '‚úÖ' : bpScore >= 50 ? '‚ö†Ô∏è' : '‚ùå';
              const seoIcon = seoScore >= 95 ? '‚úÖ' : seoScore >= 50 ? '‚ö†Ô∏è' : '‚ùå';
              const pwaIcon = pwaScore >= 90 ? '‚úÖ' : pwaScore >= 50 ? '‚ö†Ô∏è' : '‚ùå';

              summary += `### ${url || '/'}\n\n`;
              summary += `| Category | Score | Status |\n`;
              summary += `|----------|-------|--------|\n`;
              summary += `| Performance | ${perfScore} | ${perfIcon} |\n`;
              summary += `| Accessibility | ${a11yScore} | ${a11yIcon} |\n`;
              summary += `| Best Practices | ${bpScore} | ${bpIcon} |\n`;
              summary += `| SEO | ${seoScore} | ${seoIcon} |\n`;
              summary += `| PWA | pwaScore} | ${pwaIcon} |\n\n`;
            });

            summary += '\n**Thresholds:**\n';
            summary += '- Performance: ‚â•90 ‚úÖ, 50-89 ‚ö†Ô∏è, <50 ‚ùå\n';
            summary += '- Accessibility: ‚â•95 ‚úÖ, 50-94 ‚ö†Ô∏è, <50 ‚ùå\n';
            summary += '- Best Practices: ‚â•95 ‚úÖ, 50-94 ‚ö†Ô∏è, <50 ‚ùå\n';
            summary += '- SEO: ‚â•95 ‚úÖ, 50-94 ‚ö†Ô∏è, <50 ‚ùå\n';
            summary += '- PWA: ‚â•90 ‚úÖ, 50-89 ‚ö†Ô∏è, <50 ‚ùå\n\n';
            summary += `[üìä View detailed reports in artifacts](${context.payload.repository.html_url}/actions/runs/${context.runId})\n`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
